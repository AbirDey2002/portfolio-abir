@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Cyberpunk Dark Theme - HSL Colors Only */
    --background: 240 10% 3.9%;
    --foreground: 200 100% 90%;

    /* Neon Accents */
    --cyber-cyan: 180 100% 50%;
    --cyber-purple: 270 100% 70%;
    --cyber-pink: 320 100% 70%;
    --cyber-green: 120 100% 50%;
    --cyber-blue: 220 100% 60%;
    
    /* Primary Theme */
    --primary: 180 100% 50%;
    --primary-foreground: 240 10% 3.9%;
    --primary-glow: 180 100% 70%;

    /* Secondary Theme */
    --secondary: 270 100% 70%;
    --secondary-foreground: 240 10% 3.9%;
    --secondary-glow: 270 100% 85%;

    /* Card & Surface */
    --card: 240 15% 8%;
    --card-foreground: 200 100% 90%;
    --card-border: 180 50% 30%;

    /* Interactive Elements */
    --accent: 320 100% 70%;
    --accent-foreground: 240 10% 3.9%;
    --accent-glow: 320 100% 85%;

    /* Muted Elements */
    --muted: 240 15% 15%;
    --muted-foreground: 200 20% 60%;

    /* Borders & Inputs */
    --border: 240 20% 20%;
    --input: 240 15% 12%;
    --ring: 180 100% 50%;

    /* Destructive */
    --destructive: 0 100% 60%;
    --destructive-foreground: 240 10% 3.9%;

    /* Popover */
    --popover: 240 15% 8%;
    --popover-foreground: 200 100% 90%;

    /* Gradients */
    --gradient-cyber: linear-gradient(135deg, hsl(var(--cyber-cyan)) 0%, hsl(var(--cyber-purple)) 100%);
    --gradient-neural: linear-gradient(45deg, hsl(var(--cyber-blue)) 0%, hsl(var(--cyber-pink)) 50%, hsl(var(--cyber-cyan)) 100%);
    --gradient-data: linear-gradient(180deg, hsl(var(--background)) 0%, hsl(240 15% 8%) 100%);

    /* Shadows & Glows */
    --glow-cyan: 0 0 20px hsl(var(--cyber-cyan) / 0.5);
    --glow-purple: 0 0 20px hsl(var(--cyber-purple) / 0.5);
    --glow-pink: 0 0 20px hsl(var(--cyber-pink) / 0.5);
    --glow-subtle: 0 0 40px hsl(var(--primary) / 0.3);
    
    /* Circuit Pattern */
    --circuit-pattern: repeating-linear-gradient(
      90deg,
      transparent,
      transparent 98px,
      hsl(var(--cyber-cyan) / 0.1) 100px
    ),
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 98px,
      hsl(var(--cyber-cyan) / 0.1) 100px
    );

    /* Animations */
    --transition-cyber: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-glow: all 0.5s ease-in-out;

    --radius: 0.75rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-mono;
    background-image: var(--circuit-pattern);
    overflow-x: hidden;
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer utilities {
  /* Cyberpunk Text Effects */
  .text-glow-cyan {
    color: hsl(var(--cyber-cyan));
    text-shadow: var(--glow-cyan);
  }
  
  .text-glow-purple {
    color: hsl(var(--cyber-purple));
    text-shadow: var(--glow-purple);
  }
  
  .text-glow-pink {
    color: hsl(var(--cyber-pink));
    text-shadow: var(--glow-pink);
  }

  /* Neon Button Styles */
  .btn-cyber {
    @apply relative px-8 py-3 bg-transparent border-2 border-primary text-primary font-bold tracking-wider transition-all duration-300 overflow-hidden;
    text-shadow: 0 0 10px hsl(var(--primary) / 0.5);
    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
  }
  
  .btn-cyber:hover {
    @apply bg-primary text-primary-foreground;
    box-shadow: 0 0 30px hsl(var(--primary) / 0.6), inset 0 0 30px hsl(var(--primary) / 0.1);
  }
  
  .btn-cyber::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, hsl(var(--primary) / 0.2), transparent);
    transition: left 0.5s;
  }
  
  .btn-cyber:hover::before {
    left: 100%;
  }

  /* Glitch Animation */
  .glitch {
    position: relative;
    animation: glitch 2s infinite;
  }
  
  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .glitch::before {
    animation: glitch-1 0.5s infinite;
    color: hsl(var(--cyber-cyan));
    z-index: -1;
  }
  
  .glitch::after {
    animation: glitch-2 0.5s infinite;
    color: hsl(var(--cyber-pink));
    z-index: -2;
  }

  /* Circuit Lines */
  .circuit-line {
    position: relative;
  }
  
  .circuit-line::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, hsl(var(--cyber-cyan) / 0.5), transparent);
    animation: circuit-flow 3s infinite;
  }

  /* Glass Morphism Effect */
  .glass {
    @apply backdrop-blur-md bg-card/20 border border-border/30;
    box-shadow: 0 8px 32px hsl(var(--background) / 0.3);
  }

  /* Neural Network Grid */
  .neural-grid {
    background-image: 
      radial-gradient(circle at 25% 25%, hsl(var(--cyber-cyan) / 0.1) 2px, transparent 0),
      radial-gradient(circle at 75% 75%, hsl(var(--cyber-purple) / 0.1) 2px, transparent 0);
    background-size: 50px 50px;
    background-position: 0 0, 25px 25px;
  }
}

@keyframes glitch {
  0%, 74%, 76%, 100% { transform: translate(0); }
  75% { transform: translate(-2px, 2px); }
}

@keyframes glitch-1 {
  0%, 74%, 76%, 100% { transform: translate(0); }
  75% { transform: translate(2px, -2px); }
}

@keyframes glitch-2 {
  0%, 74%, 76%, 100% { transform: translate(0); }
  75% { transform: translate(-2px, -2px); }
}

@keyframes circuit-flow {
  0% { transform: translateX(-100%); opacity: 0; }
  50% { opacity: 1; }
  100% { transform: translateX(100%); opacity: 0; }
}

@keyframes pulse-glow {
  0%, 100% { 
    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
  }
  50% { 
    box-shadow: 0 0 40px hsl(var(--primary) / 0.6), 0 0 60px hsl(var(--primary) / 0.3);
  }
}
